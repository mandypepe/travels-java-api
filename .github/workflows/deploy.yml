name: Java CI
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: install java
        run: |
          sudo amazon-linux-extras enable corretto8
          sudo yum install java-1.8.0-amazon-corretto -y
          sudo yum install java-1.8.0-amazon-corretto-devel -y
      - name: install maven
        run: |
          sudo wget https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo
          sudo sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
          sudo yum install -y apache-maven
          sudo yum install java-1.8.0-devel -y

      - uses: actions/checkout@v3
      - name: check dir estructure
        run: |
          pwd
          ls -latR
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'adopt'
          cache: maven
          check-latest: true
      - name: Build with Maven glo
        #working-directory: '$HOME/actions-runner/_work/travels-java-api/travels-java-api/'
        run: mvn -B package --file pom.xml
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package
      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify
      - name: Create target dir
        run: mkdir staging && cp target/*.jar staging
      - name: check dir estructure
        run: |
          pwd
          ls -latR
      - name: Create artifac
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}